Commit Format: < type > ( < scope > ): < subject >

1. Jenis Komit:
- build: Perubahan terkait dengan proses build(eg: perubahan npm / penambahan dependensi eksternal)
- chore: Perubahan kode yang tidak akan dilihat oleh pengguna eksternal(eg: perubahan pada file.gitignore atau.prettierrc)  
- feat: Fitur baru  
- fix: Perbaikan bug  
- docs: Perubahan terkait dengan dokumentasi  
- refactor: Kode yang tidak memperbaiki bug atau menambah fitur baru.(eg: perubahan semantik seperti penggantian nama variabel / fungsi)  
- perf: Perubahan kode yang meningkatkan performa  
- style: Kode yang terkait dengan gaya penulisan  
- test: Penambahan pengujian baru atau perubahan pada pengujian yang sudah ada

2. Ruang Lingkup(Opsional):
- Ruang lingkup menjelaskan bagian dari kode yang terpengaruh oleh perubahan.  
- Contoh: user, auth, database, ui, dsb.

3. Subjek:
- Subjek menjelaskan secara singkat perubahan yang dilakukan.  
- Gunakan kata kerja dalam bentuk infinitif.  
- Pastikan subjek diawali dengan huruf kecil kecuali jika merujuk pada nama sendiri atau akronim.

Contoh Commit Message:
- feat(auth): Tambahkan fungsi autentikasi dengan OAuth  
- fix(ui): Perbaiki tata letak tombol pada halaman utama  
- docs: Tambahkan dokumentasi tentang konfigurasi CORS  
- refactor(database): Ubah pemrosesan error saat koneksi ke database  
- perf(api): Optimalkan waktu respon untuk endpoint / users  
- style(auth): Perbaiki indentasi pada file auth.service.ts  
- test(auth): Tambahkan pengujian otomatis untuk fungsi login  
- chore: Update versi dependency axios menjadi 2.0.0